{"version":3,"sources":["post.js","utils.js","useFetch.js","App.js","index.js"],"names":["Post","id","title","url","className","src","alt","paginate","data","pages","Math","ceil","length","Array","from","_","index","start","slice","useFetch","useState","loading","setLoading","setData","images","setImages","fetchImages","a","fetch","reponse","json","useEffect","App","filteredData","setFilteredData","setPages","rawData","setRawData","page","setPage","searchTerm","setSearchTerm","searchValue","React","useRef","type","placeholder","name","ref","onChange","result","current","value","console","log","filter","search","noOfPages","e","sort","b","localeCompare","items","handleChange","target","map","item","onClick","prevPage","handlePage","nextPage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dcd3d840.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Post({ id, title, url }) {\r\n\r\n  return (\r\n    <div className='p-3 image'>\r\n      <div className='flex justify-center'>\r\n        <img\r\n          className='w-5/6 h-44 shadow-lg'\r\n          key={id}\r\n          src={url}\r\n          alt={title}></img>\r\n      </div>\r\n      <p className='text-xs text-center'>{title}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;","const paginate = (data) => {\r\n    const itemPerPage = 20;\r\n    const pages = Math.ceil(data.length/itemPerPage)\r\n\r\n    const newImages = Array.from({length: pages }, (_, index) => {\r\n        const start = index * itemPerPage\r\n        return data.slice(start, start + itemPerPage)\r\n    })\r\n    return newImages\r\n};\r\n\r\nexport default paginate;\r\n\r\n","import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport paginate from './utils';\r\n\r\nconst url = 'https://jsonplaceholder.typicode.com/photos';\r\n\r\nconst useFetch = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [data , setData ] = useState([]);\r\n  const [images, setImages ] = useState([])\r\n     //FETCH THE IMAGES\r\n    const fetchImages = async () => {\r\n    const reponse = await fetch(`${url}`)\r\n    const images = await reponse.json()\r\n    setData(paginate(images))\r\n    setImages(images.slice(0,200))\r\n    setLoading(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n      fetchImages()\r\n  }, [])\r\n    return { loading, data, images }\r\n}\r\n\r\nexport default useFetch;\r\n\r\n","import React from 'react';\nimport { useEffect, useState } from 'react';\nimport Post from './post';\nimport paginate from './utils';\nimport useFetch from './useFetch';\n\n\n\nfunction App() {\n\n  const { loading, data,images } = useFetch();\n  const [filteredData, setFilteredData] = useState([])\n  const [ pages, setPages ] = useState([]);\n  const [ rawData, setRawData] = useState([]);\n  const [page, setPage] = useState(0);\n  const [searchTerm, setSearchTerm] = useState('')\n\n  \n  useEffect(() => {\n    if (loading) return\n    setFilteredData(data[page])\n    setPages(data)\n    setRawData(images)\n  }, [loading, page])\n\n  \n  \n\n  // FUNCTION FOR SWITCHING PAGES\n  const handlePage = (index) => {\n    setPage(index)\n  }\n\n  // PREV PAGE AND NEXT PAGE FUNCTIONS \n  // Prev Page\n  const prevPage = () => {\n    setPage(() =>{\n      let prevPage = page - 1\n      if (prevPage < 0) {\n        prevPage = data.length-1\n      }\n      return prevPage\n    })\n  }\n  // Next page\n  const nextPage = () => {\n    setPage(() =>{\n      let nextPage = page + 1\n      if (nextPage > data.length-1) {\n        nextPage = 0\n      }\n      return nextPage\n    })\n  }\n\n  //  SEARCH FUNCTION\n  const searchValue = React.useRef('');\n  const searchImage = () => {\n    let result = []\n    setSearchTerm(searchValue.current.value)\n    console.log(searchTerm)\n    result = images.filter((data) => {\n      return data.title.search(searchTerm) !== -1;\n    })\n    const noOfPages = paginate(result);\n    setPages(noOfPages)\n    if ( pages.length > 0) {\n      setPage(0)\n      setFilteredData(pages[page])//get the page index of the paginated data\n    } else {\n      setFilteredData([])\n    }\n  }\n\n  // SORT FUNCTION\n  const handleChange = (value) => {\n    console.log('filter value changed');\n    console.log(value)\n    let result;\n    value === 'none' ? result = images : result = rawData.sort((a, b) => {\n      if (value === 'ascending') {\n        return a.title.localeCompare(b.title)\n      } else if ( value === 'descending') {\n        return b.title.localeCompare(a.title)\n      } \n    })\n    \n    \n    console.log(result)\n    console.log(images)\n\n    const items = paginate(result)\n    setPage(0);\n    setFilteredData(items[page]);\n  }\n\n\n  if (loading) {\n    return (\n      <section className=\"section loading\">\n        <h1>Loading...</h1>\n      </section>\n    )\n  }\n  return (\n    <div className='py-8'>\n      {data.length > 0 ? (\n        <>\n          <div className=\"py-14 px-8 md:px-14\">\n\n            <div className='flex justify-between px-4'>\n              <div className='w-28 md:w-52'>\n                <form className=''>\n                  <input className='search'\n                    type=\"text\"\n                    placeholder='Search'\n                    name='search'\n                    ref={searchValue}\n                    onChange={searchImage}></input>\n                </form>\n              </div>\n              <div className='flex w-2/6 items-center '>\n                <label className=\"country mx-0 text-400-gray\">Filter:</label>\n                <select className='sort mx-2 text-400-gray px-5 py-3 lg: px-8 py-4' id=\"country\" name=\"country\">\n                  <option value=\"australia\">None</option>\n                  <option value=\"alphabetically\">alphabetically</option>\n                </select>\n                <select \n                  className='sort mx-2'\n                  id=\"country\"\n                  name=\"country\"\n                  onChange={(e) => handleChange(e.target.value)}\n                >\n                  <option value=\"none\">None</option>\n                  <option value=\"ascending\">Ascending</option>\n                  <option value=\"descending\">Descending</option>\n                </select>\n              </div>\n            </div>\n            <div className='flex items-center my-10 justify-center bg-red-200 py-4'>\n              <p >Get started with all the strength of rams belly button</p>\n            </div>\n          </div>\n          <section className='flex flex-wrap justify-center'>\n            {/* display all the Images in one page */}\n            {filteredData.map((item, index) => {\n              return (\n                <Post key={index} {...item} />\n              )\n            })}\n          </section>\n          {/* If the loading is complete display the buttons  */}\n          {!loading && <div className='flex justify-center items-center'>\n            <button className='prev' onClick={prevPage}>prev</button>\n            {data.map((item, index) => {\n              return <button\n                key={index}\n                onClick={() => handlePage(index)}\n                className={`${ index === page? 'block': 'hidden'} py-1 px-2 mr-2 bg-blue-700 text-white rounded`}>\n                {index+1}\n              </button>\n            })}\n            <span className='mx-4'>of</span>\n            <span className='mr-3'>{pages.length}</span>\n            <button className='next' onClick={nextPage}>next</button>\n          </div>}\n        </>\n      ) : (\n        <h1>No Posts to display</h1>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './tailwind.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}